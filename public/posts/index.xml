<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Brant Konetchy</title>
    <link>https://bkonetchy.com/posts/</link>
    <description>Recent content in Posts on Brant Konetchy</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 01 Dec 2020 21:13:14 -0500</lastBuildDate>
    
	<atom:link href="https://bkonetchy.com/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hello R Markdown</title>
      <link>https://bkonetchy.com/posts/2020-12-01-r-rmarkdown/</link>
      <pubDate>Tue, 01 Dec 2020 21:13:14 -0500</pubDate>
      
      <guid>https://bkonetchy.com/posts/2020-12-01-r-rmarkdown/</guid>
      <description>R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.
You can embed an R code chunk like this:
summary(cars) ## speed dist  ## Min. : 4.0 Min. : 2.00  ## 1st Qu.:12.0 1st Qu.: 26.00  ## Median :15.0 Median : 36.00  ## Mean :15.4 Mean : 42.</description>
    </item>
    
    <item>
      <title>Grid Refinement Part 1</title>
      <link>https://bkonetchy.com/posts/grid-refinement-pt1/</link>
      <pubDate>Thu, 26 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://bkonetchy.com/posts/grid-refinement-pt1/</guid>
      <description>IntroductionThe grid refinement code was developed to allow for localized refinement of a grid. The idea itself came from my work with MODFLOW USG, which allowed for local refinement of model grids using a quad tree refinement method. I wanted to develop a method within R that could allow me to quickly refine a grid, and then use that grid for any analysis I wanted to perform. What follows is an explanation of the code, assumptions, and examples of a grid refinement method in R.</description>
    </item>
    
    <item>
      <title>Creating a New Theme</title>
      <link>https://bkonetchy.com/posts/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://bkonetchy.com/posts/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>Test 1</title>
      <link>https://bkonetchy.com/posts/test-1/</link>
      <pubDate>Wed, 01 Jan 1012 00:00:00 +0000</pubDate>
      
      <guid>https://bkonetchy.com/posts/test-1/</guid>
      <description>Test 1 I am referencing a footnote1
1package main 2 3import &amp;#34;fmt&amp;#34; 4 5func main() { 6 fmt.Println(&amp;#34;{linenos=inline}&amp;#34;) 7} 1 2 3 4 5 6 7  package main import &amp;#34;fmt&amp;#34; func main() { fmt.Println(&amp;#34;{linenos=table}&amp;#34;) }   Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis in dictum tortor. Morbi laoreet enim id sem euismod lobortis. Donec quam libero, bibendum non cursus vitae, dictum vel eros.   I am the footnote &amp;#x21a9;&amp;#xfe0e;</description>
    </item>
    
  </channel>
</rss>